# This is a basic workflow to help you get started with Actions

name: soc-deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env: 
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "us-east-1"
  TF_VAR_key_name: ${{ secrets.AWS_KEY_NAME }}
  TF_VAR_my_ip: ${{ secrets.MY_IP }}
  TF_VAR_default_thehive_user: ${{ secrets.DEFAULT_THEHIVE_USER }}
  TF_VAR_default_thehive_password: ${{ secrets.DEFAULT_THEHIVE_PASSWORD }}
  TF_VAR_myorg_thehive_user_analyst_password: ${{ secrets.MYORG_THEHIVE_USER_ANALYST_PASSWORD }}
  TF_VAR_myorg_thehive_user_admin_password: ${{ secrets.MYORG_THEHIVE_USER_ADMIN_PASSWORD }}

permissions:
  contents: read # required for actions/checkout

jobs:

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        # env:
        #   AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        #   AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        # run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        id: validate
        run: terraform validate 

      - name: Terraform Plan
        id: plan
        run: terraform plan 
        # if: github.event_name == 'pull_request'
        continue-on-error: false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
          
  # deploy:
  #   name: Destroy
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       shell: bash

  #   steps:

  #     - name: Terraform destroy
  #       id: destroy
  #       run: terraform destroy 
        
